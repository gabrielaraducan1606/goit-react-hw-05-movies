{"version":3,"file":"static/js/278.09d562b3.chunk.js","mappings":"8PAKMA,EAAU,qDAAAC,OADA,mCAC+D,WAEhE,SAASC,IACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAnBJ,EAAEK,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEME,EAAAA,EAAAA,IAAU,GAADvB,OAAID,GAAUC,OAAGM,IAAS,KAAD,EAAnDY,EAAQC,EAAAK,KACdb,EAAUO,EAASO,KAAKC,SAASP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEjCS,QAAQC,MAAM,8BAA6BV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAd,EAAA,kBAEvD,gBARiBe,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAUlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJD,EAAAA,EAAAA,MAAA,QAAMG,SAAUzB,EAAauB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOC,MAAOjC,EAAOkC,SAAU,SAACvB,GAAC,OAAKV,EAASU,EAAEwB,OAAOF,MAAM,KAC1EH,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,eAExBC,EAAAA,EAAAA,KAAA,MAAAD,SACGzB,EAAOgC,KAAI,SAAAC,GAAK,OACfP,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAA7C,OAAa2C,EAAMG,IAAKX,SAAEQ,EAAMI,SADjCJ,EAAMG,GAEV,QAKf,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_KEY = '6e17ff225f02e05661d0fb89e3b2e351';\nconst SEARCH_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=`;\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.get(`${SEARCH_URL}${query}`);\n      setMovies(response.data.results);\n    } catch (error) {\n      console.error(\"Error searching for movies:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["SEARCH_URL","concat","Movies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movies","setMovies","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","response","_context","prev","next","preventDefault","axios","sent","data","results","t0","console","error","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","type","value","onChange","target","map","movie","Link","to","id","title"],"sourceRoot":""}