{"version":3,"file":"static/js/278.8adfc1e5.chunk.js","mappings":"kOAOe,SAASA,IACtB,IAAAC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAcF,EAAaG,IAAI,UAAY,GAU3CC,EAAc,SAACC,GACnBC,EAAAA,EAAAA,IACO,GAADC,OAjBa,4CAiBQ,aAAAA,OAlBf,mCAkBkC,WAAAA,OAAUF,IACrDG,MAAK,SAACC,GAAQ,OAAKb,EAAiBa,EAASC,KAAKC,QAAQ,IAC1DC,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAM,iCAAkCA,EAAM,GAC5E,EAMA,OAJAE,EAAAA,WAAgB,WACVb,GAAaE,EAAYF,EAC/B,GAAG,CAACA,KAGFc,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJD,EAAAA,EAAAA,MAAA,QAAMG,SAtBW,SAACC,GACpBA,EAAMC,iBACN,IAAMhB,EAAQe,EAAME,OAAOC,SAASlB,MAAMmB,MAAMC,OAC3CpB,IACLJ,EAAgB,CAAEI,MAAAA,IAClBD,EAAYC,GACd,EAgBiCY,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,OAAOC,KAAK,QAAQC,aAAc1B,EAAa2B,YAAY,sBACvEX,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAAQT,SAAC,eAExBC,EAAAA,EAAAA,KAAA,MAAAD,SACGtB,EAAcmC,KAAI,SAACC,GAAK,OACvBb,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAE,WAAA1B,OAAawB,EAAMG,IAAKjB,SAC7Bc,EAAMI,SAFFJ,EAAMG,GAIV,QAKf,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_KEY = '6e17ff225f02e05661d0fb89e3b2e351';\nconst SEARCH_MOVIES_URL = `https://api.themoviedb.org/3/search/movie`;\n\nexport default function Movies() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') || '';\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const query = event.target.elements.query.value.trim();\n    if (!query) return;\n    setSearchParams({ query }); \n    fetchMovies(query);\n  };\n\n  const fetchMovies = (query) => {\n    axios\n      .get(`${SEARCH_MOVIES_URL}?api_key=${API_KEY}&query=${query}`)\n      .then((response) => setSearchResults(response.data.results))\n      .catch((error) => console.error('Error fetching search results:', error));\n  };\n\n  React.useEffect(() => {\n    if (searchQuery) fetchMovies(searchQuery);\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"query\" defaultValue={searchQuery} placeholder=\"Search movies...\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Movies","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","fetchMovies","query","axios","concat","then","response","data","results","catch","error","console","React","_jsxs","children","_jsx","onSubmit","event","preventDefault","target","elements","value","trim","type","name","defaultValue","placeholder","map","movie","Link","to","id","title"],"sourceRoot":""}